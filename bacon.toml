# This is a configuration file for the bacon tool
# More info at https://github.com/Canop/bacon

default_job = "check"

[jobs]

[jobs.check]
command = ["cargo", "check", "--color", "always"]
need_stdout = false

[jobs.check-std]
command = ["cargo", "check", "--target", "x86_64-unknown-linux-gnu", "--example", "linux-ax12a", "--example", "linux-xl320", "--color", "always", "-F", "std"]
need_stdout = false
watch = ["examples"]

[jobs.check-stm32]
command = ["cargo", "check", "--example", "stm32-ax12a", "--example", "stm32-mx1062", "--example", "stm32-xl320", "--color", "always", "-F", "stm32"]
need_stdout = false
watch = ["examples"]

[jobs.clippy]
command = ["cargo", "clippy", "--color", "always", "--", "-W", "clippy::pedantic", "-W", "clippy::nursery", "-W", "clippy::unwrap_used", "-W", "clippy::expect_used", "-A", "clippy::missing_errors_doc", "-A", "clippy::doc_markdown"]
need_stdout = false

[jobs.clippy-std]
command = ["cargo", "clippy", "--target", "x86_64-unknown-linux-gnu", "--example", "linux-ax12a", "--example", "linux-xl320", "--color", "always", "-F", "std"]
need_stdout = false
watch = ["examples"]

[jobs.clippy-stm32]
command = ["cargo", "clippy", "--example", "stm32-ax12a", "--example", "stm32-mx1062", "--example", "stm32-xl320", "--color", "always", "-F", "stm32"]
need_stdout = false
watch = ["examples"]


[jobs.test]
command = ["cargo", "test", "--color", "always"]
need_stdout = true
watch = ["tests"]

[jobs.doc]
command = ["cargo", "doc", "--color", "always", "--no-deps"]
need_stdout = false

# if the doc compiles, then it opens in your browser and bacon switches
# to the previous job
[jobs.doc-open]
command = ["cargo", "doc", "--color", "always", "--no-deps", "--open"]
need_stdout = false
on_success = "back" # so that we don't open the browser at each change

# You can run your application and have the result displayed in bacon,
# *if* it makes sense for this crate. You can run an example the same
# way. Don't forget the `--color always` part or the errors won't be
# properly parsed.
[jobs.run]
command = ["cargo", "run", "--color", "always"]
need_stdout = true
allow_warnings = true

# You may define here keybindings that would be specific to
# a project, for example a shortcut to launch a specific job.
# Shortcuts to internal functions (scrolling, toggling, etc.)
# should go in your personal prefs.toml file instead.
[keybindings]
u = "job:check"
i = "job:check-std"
e = "job:check-stm32"
r = "job:clippy"
s = "job:clippy-std"
t = "job:clippy-stm32"
